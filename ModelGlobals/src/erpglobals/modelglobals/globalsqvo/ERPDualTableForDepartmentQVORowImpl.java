package erpglobals.modelglobals.globalsqvo;

import erpglobals.modelglobals.ERPGlobalPLSQLClass;

import erpglobals.modelglobals.globalsqvo.common.ERPDualTableForDepartmentQVORow;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 21 22:56:06 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ERPDualTableForDepartmentQVORowImpl extends ViewRowImpl implements ERPDualTableForDepartmentQVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Erppk,
        AccERPOracleDepartmentAccessQVO,
        AccERPUserCompanyCOAAccessQVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ERPPK = AttributesEnum.Erppk.index();
    public static final int ACCERPORACLEDEPARTMENTACCESSQVO = AttributesEnum.AccERPOracleDepartmentAccessQVO.index();
    public static final int ACCERPUSERCOMPANYCOAACCESSQVO = AttributesEnum.AccERPUserCompanyCOAAccessQVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ERPDualTableForDepartmentQVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Erppk.
     * @return the Erppk
     */
    public Integer getErppk() {
        return (Integer) getAttributeInternal(ERPPK);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Erppk.
     * @param value value to set the  Erppk
     */
    public void setErppk(Integer value) {
        setAttributeInternal(ERPPK, value);
        ERPdoInsertAccessDepartment();
        
    }


    /**
     * Gets the view accessor <code>RowSet</code> AccERPOracleDepartmentAccessQVO.
     */
    public RowSet getAccERPOracleDepartmentAccessQVO() {
        return (RowSet) getAttributeInternal(ACCERPORACLEDEPARTMENTACCESSQVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccERPUserCompanyCOAAccessQVO.
     */
    public RowSet getAccERPUserCompanyCOAAccessQVO() {
        return (RowSet) getAttributeInternal(ACCERPUSERCOMPANYCOAACCESSQVO);
    }

    public void ERPdoInsertAccessDepartment() {
        System.out.println("ERPdoInsertAccessDepartment-start-v2-change");
        getAccERPUserCompanyCOAAccessQVO().executeQuery();
        System.out.println("ERPdoInsertAccessDepartment-a");
        RowSetIterator rsi =getAccERPUserCompanyCOAAccessQVO();
        System.out.println("ERPdoInsertAccessDepartment-b");
        RowSetIterator rsiDepart=null;
        System.out.println("ERPdoInsertAccessDepartment-c");

        String ERPTableName = ERPGlobalPLSQLClass.doGetERPModelTempDepartAccessTable();
        System.out.println("ERPdoInsertAccessDepartment-d");
        String ErpTransType = ERPGlobalPLSQLClass.doErpGetConnTypeModel(getDBTransaction());
        System.out.println("ERPdoInsertAccessDepartment-f");
        if (ErpTransType.equals("ERPORACLE")) {
            System.out.println("ERPdoInsertAccessDepartment-g");    
            ERPGlobalPLSQLClass.doErpExecutePLSQLModel(getDBTransaction(),
                                                       "begin delete from  temp_admin_department_access; end;", "Y");
        } else {
            ERPGlobalPLSQLClass.doErpExecutePLSQLModel(getDBTransaction(),
                                                       "DROP   temporary TABLE IF EXISTS temp_admin_department_access",
                                                       "N");
            ERPGlobalPLSQLClass.doErpExecutePLSQLModel(getDBTransaction(),
                                                       "CREATE temporary TABLE temp_admin_department_access (\n" +
                                                       "  department_id int(10) ,\n" + "  user_id int(10) ,\n" +
                                                       "  global_company_id int(10) ,\n" + "  company_id int(10) ,\n" +
                                                       "  company_type_sno int(5) ,\n" +
                                                       "  parent_comp_code int(10) ,\n" + 
                                                       "  company_hierarchy_path varchar(200) ,\n" + 
                                                       "  type_hierarchy_path varchar(200) ,\n" + 
                                                       "  created_by int(5) ,\n" +
                                                       "  created_date datetime \n" + ") ", "N");
        }
        System.out.println("ERPdoInsertAccessDepartment-h");
        String ErpPlsql = "";
        rsi.reset();
        rsi.setRangeSize(-1);
        System.out.println("ERPdoInsertAccessDepartment-i");
        while (rsi.hasNext()) {//while one
        System.out.println("ERPdoInsertAccessDepartment-j");
            Row r = rsi.next();
            //System.out.println("i am printing>"+r.getAttribute("CompanyId"));
        // if (ErpTransType.equals("ERPORACLE")) {
               getAccERPOracleDepartmentAccessQVO().setNamedWhereClauseParam("P_ADF_COMPANY_ID", r.getAttribute("CompanyId"));
               getAccERPOracleDepartmentAccessQVO().setNamedWhereClauseParam("P_ADF_GLOBAL_COMPANY_ID", r.getAttribute("GlobalCompanyId"));
               getAccERPOracleDepartmentAccessQVO().executeQuery();
               rsiDepart=getAccERPOracleDepartmentAccessQVO();
          // }
            //else {
          //   getAccERPMySQLDepartmentAccessQVO().setNamedWhereClauseParam("P_ADF_COMPANY_ID", r.getAttribute("CompanyId"));
          //   getAccERPMySQLDepartmentAccessQVO().setNamedWhereClauseParam("P_ADF_GLOBAL_COMPANY_ID", r.getAttribute("GlobalCompanyId"));
          //   getAccERPMySQLDepartmentAccessQVO().executeQuery();
             //System.out.println("this is mysql"+getAccERPMySQLDepartmentAccessQVO().getRowCount());
          //   rsiDepart=getAccERPMySQLDepartmentAccessQVO();
        // }
            
           while(rsiDepart.hasNext())//while two
           {
               System.out.println("this is nested-3>"+ERPTableName );
            Row depart=rsiDepart.next();
            ErpPlsql =
                "insert into " + ERPTableName +
                " (department_id,user_id,global_company_id,company_id,company_type_sno,parent_comp_code,company_hierarchy_path,type_hierarchy_path,created_by,created_date)" +
                "values (" + depart.getAttribute("CompCode") + "," + ERPGlobalPLSQLClass.doGetModelUserSno() + "," +
                depart.getAttribute("GlobalCompCode") + "," + r.getAttribute("CompanyId") + "," +
                depart.getAttribute("CompanyTypeSno") + "," + depart.getAttribute("ParentCompCode") + ",'" +depart.getAttribute("CompanyHierarchyPath") + "'" + ",'" +depart.getAttribute("TypeHierarchyPath") + "'," +
                 ERPGlobalPLSQLClass.doGetModelUserSno();
            if (ErpTransType.equals("ERPORACLE")) {
                // System.out.println("begin "+ ErpPlsql+",sysdate); end;");
                ERPGlobalPLSQLClass.doErpExecutePLSQLModel(getDBTransaction(), "begin " + ErpPlsql + ",sysdate); end;",
                                                           "Y");
            } else {
                System.out.println(depart.getAttribute("TypeHierarchyPath")+">>typehierarchypath");
                 System.out.println(ErpPlsql+"<<my-sql-calling-2");
                ERPGlobalPLSQLClass.doErpExecutePLSQLModel(getDBTransaction(), ErpPlsql + ",sysdate());", "Y");

            }
           }//while two  
        }//while one
        System.out.println("ERPdoInsertAccessDepartment-finish");
    }
}

